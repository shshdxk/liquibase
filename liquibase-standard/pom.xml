<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.github.shshdxk</groupId>
        <artifactId>liquibase</artifactId>
        <version>4.33.0</version>
    </parent>

    <properties>
        <maven.deploy.skip>true</maven.deploy.skip>
        <sonar.coverage.jacoco.xmlReportPaths>../target/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <lombok.version>1.18.38</lombok.version>
    </properties>

    <artifactId>liquibase-standard</artifactId>
    <name>Liquibase Standard base library</name>
    <packaging>jar</packaging>

    <dependencies>

        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>5.0.0</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-antunit</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>osgi.core</artifactId>
            <version>8.0.0</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.13.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>5.11.2</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils</artifactId>
                </exclusion>
                <exclusion> <!-- direct dependency for better dependabot control -->
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-text</artifactId>
                </exclusion>
                <exclusion> <!-- direct dependency for better dependabot control -->
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-collections4</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>2.4</version>
        </dependency>

        <!-- include as a dependency for people running java 9+ -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>javax.activation-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${commons-text.version}</version>
        </dependency>
        <dependency>
            <groupId>org.nanohttpd</groupId>
            <artifactId>nanohttpd</artifactId>
            <version>2.3.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.javacc.plugin</groupId>
                <artifactId>javacc-maven-plugin</artifactId>
                <version>3.0.3</version>
                <dependencies>
                    <dependency>
                        <groupId>net.java.dev.javacc</groupId>
                        <artifactId>javacc</artifactId>
                        <version>7.0.13</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>javacc</id>
                        <goals>
                            <goal>javacc</goal>
                        </goals>
                        <configuration>
                            <javaUnicodeEscape>false</javaUnicodeEscape>
                            <unicodeInput>true</unicodeInput>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>5.1.9</version>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>org.liquibase.core</Bundle-SymbolicName>
                        <Bundle-Name>liquibase-core</Bundle-Name>
                        <Bundle-Activator>io.github.shshdxk.liquibase.osgi.Activator</Bundle-Activator>
                        <Import-Package>
                            javax.activation*;resolution:=optional,
                            javax.servlet.*;version="[2.6,4)";resolution:=optional,
                            javax.sql.*,
                            org.osgi.*,
                            org.yaml.snakeyaml.*,
                            org.apache.commons.io.*;version="[${commons-io.version},3)",
                            org.apache.commons.lang3.*,
                            *;resolution:=optional
                        </Import-Package>
                        <Export-Package>
                            liquibase.*,
                            www.liquibase.org.xml.ns.dbchangelog
                        </Export-Package>
                        <Provide-Capability>
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.serializer.ChangeLogSerializer,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.parser.NamespaceDetails,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.database.Database,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.change.Change,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.database.DatabaseConnection,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.precondition.Precondition,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.serializer.SnapshotSerializer,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.configuration.AutoloadedConfigurations,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.diff.DiffGenerator,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.lockservice.LockService,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.changelog.ChangeLogHistoryService,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.datatype.LiquibaseDataType,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.configuration.ConfigurationValueProvider,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.logging.LogService,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.snapshot.SnapshotGenerator,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.parser.ChangeLogParser,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.servicelocator.ServiceLocator,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.diff.compare.DatabaseObjectComparator,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.command.LiquibaseCommand,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.license.LicenseService,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.diff.output.changelog.ChangeGenerator,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.executor.Executor,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.structure.DatabaseObject,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.parser.SnapshotParser,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.hub.HubService,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.command.CommandStep,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.sqlgenerator.SqlGenerator,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.logging.mdc.MdcManager,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.logging.mdc.CustomMdcObject,
                            osgi.serviceloader; osgi.serviceloader=io.github.shshdxk.liquibase.resource.PathHandler,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.report.ShowSummaryGenerator,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.parser.LiquibaseSqlParser,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.changeset.ChangeSetService,
                            osgi.serviceloader;
                            osgi.serviceloader=io.github.shshdxk.liquibase.changelog.visitor.ValidatingVisitorGenerator
                        </Provide-Capability>
                        <Require-Capability>
                            osgi.extender; filter:="(osgi.extender=osgi.serviceloader.registrar)",
                            osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)",
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.serializer.ChangeLogSerializer)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.parser.NamespaceDetails)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.database.Database)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.change.Change)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.database.DatabaseConnection)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.precondition.Precondition)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.serializer.SnapshotSerializer)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.configuration.AutoloadedConfigurations)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.diff.DiffGenerator)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.lockservice.LockService)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.changelog.ChangeLogHistoryService)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.datatype.LiquibaseDataType)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.configuration.ConfigurationValueProvider)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.logging.LogService)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.snapshot.SnapshotGenerator)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.parser.ChangeLogParser)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.servicelocator.ServiceLocator)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.diff.compare.DatabaseObjectComparator)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.command.LiquibaseCommand)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.license.LicenseService)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.diff.output.changelog.ChangeGenerator)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.executor.Executor)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.structure.DatabaseObject)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.parser.SnapshotParser)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.hub.HubService)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.command.CommandStep)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.sqlgenerator.SqlGenerator)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.logging.mdc.MdcManager)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.logging.mdc.CustomMdcObject)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.resource.PathHandler)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.report.ShowSummaryGenerator)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.parser.LiquibaseSqlParser)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.changeset.ChangeSetService)"; cardinality:=multiple,
                            osgi.serviceloader; filter:="(osgi.serviceloader=io.github.shshdxk.liquibase.changelog.visitor.ValidatingVisitorGenerator)"; cardinality:=multiple
                        </Require-Capability>
                    </instructions>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>false</addClasspath>
                                </manifest>
                                <manifestEntries>
                                    <Build-Time>${build.timestamp}</Build-Time>
                                    <Build-Number>${build.number}</Build-Number>
                                    <Liquibase-Version>${project.version}</Liquibase-Version>
                                    <Automatic-Module-Name>liquibase.core</Automatic-Module-Name>
                                </manifestEntries>
                                <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                            </archive>
                        </configuration>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate META-INF/services files automatically for the services specified below. -->
            <plugin>
                <groupId>eu.somatik.serviceloader-maven-plugin</groupId>
                <artifactId>serviceloader-maven-plugin</artifactId>
                <version>1.4.0</version>
                <configuration>
                    <services>
                        <param>io.github.shshdxk.liquibase.logging.mdc.MdcManager</param>
                        <param>io.github.shshdxk.liquibase.logging.mdc.CustomMdcObject</param>
                        <param>io.github.shshdxk.liquibase.report.ShowSummaryGenerator</param>
                        <param>io.github.shshdxk.liquibase.changeset.ChangeSetService</param>
                        <param>io.github.shshdxk.liquibase.parser.LiquibaseSqlParser</param>
                        <param>io.github.shshdxk.liquibase.database.LiquibaseTableNames</param>
                        <param>io.github.shshdxk.liquibase.changelog.visitor.ValidatingVisitorGenerator</param>
                        <param>io.github.shshdxk.liquibase.io.OutputFileHandler</param>
                        <param>io.github.shshdxk.liquibase.analytics.AnalyticsListener</param>
                        <param>io.github.shshdxk.liquibase.analytics.configuration.AnalyticsConfiguration</param>
                        <param>io.github.shshdxk.liquibase.command.CommandStep</param>
                        <param>io.github.shshdxk.liquibase.command.copy.ProjectCopier</param>
                    </services>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
